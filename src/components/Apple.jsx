/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Apple = (props) => {
  const appleRef = useRef();
  const { nodes, materials } = useGLTF('/apple.glb');

  materials.apple.metalness = 0.6;
  materials.apple2.metalness = 0.6;
  
  useFrame(({clock}) => {
    appleRef.current.rotation.y = clock.elapsedTime;
  });

  return (
    <group {...props} dispose={null} scale={0.25}>
      <group position={[11, 1, -7]} ref={appleRef}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere001_1.geometry}
          material={materials.apple}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere001_2.geometry}
          material={materials.apple2}
        />
      </group>
    </group>
  );
};

useGLTF.preload('/apple.glb');

export default Apple;