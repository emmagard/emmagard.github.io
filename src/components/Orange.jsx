/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';


const Orange = (props) => {
  const orangeRef = useRef();
  const { nodes, materials } = useGLTF('/orange.glb');

  const position = props.position ?? [3.75, 3.75, 0];

  materials.apple.metalness = 0.6;
  materials.apple2.metalness = 0.6;

  useFrame(({clock}) => {
    orangeRef.current.rotation.z = clock.elapsedTime;
    orangeRef.current.rotation.x = clock.elapsedTime;
  });

  return (
    <group {...props} dispose={null} >
      <group scale={0.25} position={position} ref={orangeRef}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere001_1.geometry}
          material={materials.apple}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere001_2.geometry}
          material={materials.apple2}
        />
      </group>
    </group>
  );
};

useGLTF.preload('/orange.glb')

export default Orange;