/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Melon = (props) => {
  const melonRef = useRef();
  const { nodes, materials } = useGLTF('/melon.glb');

  const position = props.position ?? [11, 13, -6];

  materials.melon.metalness = 1;
  materials.melon2.metalness = 1;
  materials.melon3.metalness = 1;

  materials.melon.roughness = 0;
  materials.melon2.roughness = 0.2;
  materials.melon3.roughness = 0.2;

  useFrame(({clock}) => {
    melonRef.current.rotation.x = Math.sin(clock.elapsedTime/2);
  });
  
  return (
    <group {...props} dispose={null} scale={0.21}>
      <group position={position} rotation={[0.116, 0.28, -0.128]} ref={melonRef}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere_1.geometry}
          material={materials.melon}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere_2.geometry}
          material={materials.melon2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Sphere_3.geometry}
          material={materials.melon3}
        />
      </group>
    </group>
  );
};

useGLTF.preload('/melon.glb');

export default Melon;